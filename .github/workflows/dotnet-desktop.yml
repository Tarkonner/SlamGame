name: .NET 8 Build & Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-docker:
    runs-on: ubuntu-latest

    env:
      SOLUTION_NAME: SlamGame/SlamGame.sln
      TEST_PROJECT_PATH: SlamGame/SlamGame/TestProject
      DOCKER_IMAGE_NAME: SlamGame

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_NAME }}

    - name: Build
      run: dotnet build ${{ env.SOLUTION_NAME }} --configuration Release --no-restore

    - name: Test
      run: dotnet test ${{ env.SOLUTION_NAME }} --no-build --verbosity normal

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
        file: ./Dockerfile